pipeline {
    agent any 

environment {    
        ECR_REGION            = 'ap-south-1'
        ECR_REGISTRY          = '083118395813.dkr.ecr.ap-south-1.amazonaws.com'
            }


    stages {
        stage('checkout') {
            steps {
                git 'https://github.com/mounishachirapureddy/prj.git'
            }
        }
        stage('init') {
            steps {
                sh 'terraform init'
            }
        }
        stage('validate') {
            steps {
                sh 'terraform validate'                
            }
        }
        stage('plan') {
            steps {
                sh 'terraform plan'
            }
        }
        stage('action') {
            steps {
                sh 'terraform apply --auto-approve'
            }
        }


         stage('Initialize Variables') {
            steps {
                script {
                    DOCKER_IMAGE_NAMES = ['client-image', 'gamer-module', 'merchant-module', 'gaming-vendor-module', 'general-module']
                   
                }
            }
        }
        stage('Configure AWS') {
            steps {
                script {
                    // Configure AWS credentials
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: '4b98292f-9726-4e9d-8c8d-2e6e16a946ce']]) {
                        // Update AWS CLI configuration (optional)
                        sh 'aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID'
                        sh 'aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY'
                        sh 'aws configure set region ap-south-1'
                        
                        // Update Kubernetes configuration (kubeconfig)
                        
                    }
                }
            }
        }



      
        stage('Build') {
            steps {
                dir('client') {
                    sh 'npm install'
                }
                dir('servers/gamer-module') {
                    sh 'npm install'
                }
                dir('servers/merchant-module') {
                    sh 'npm install'
                }
                dir('servers/gaming-vendor-module') {
                    sh 'npm install'
                }
                dir('servers/general-module') {
                    sh 'npm install'
                }
            }
        }
         


        stage('Create Docker Images') {
            steps {
                dir('client') {
                    sh 'docker build -t client-image .'
                }
                dir('servers/gamer-module') {
                    sh 'docker build -t gamer-module .'
                }
                dir('servers/merchant-module') {
                    sh 'docker build -t merchant-module .'
                }
                dir('servers/gaming-vendor-module') {
                    sh 'docker build -t gaming-vendor-module .'
                    sh 'docker run -itd gaming-vendor-module'
                }
                dir('servers/general-module') {
                    sh 'docker build -t general-module .'
                }
            }
        }
         
        stage('Authenticate with ECR') {
            steps {
                script {
                    def ecrLogin = "aws ecr get-login-password --region ${ECR_REGION}"
                    def ecrLoginCommand = "${ecrLogin} | docker login --username AWS --password-stdin ${ECR_REGISTRY}"
                    sh ecrLoginCommand
                }
            }
        }

        stage('Push Docker Images to ECR') {
            steps {
                script {
                    DOCKER_IMAGE_NAMES.each { imageName ->
                        withDockerRegistry(url: "https://${ECR_REGISTRY}/${imageName}:latest") {
                            sh "docker tag ${imageName}:latest ${ECR_REGISTRY}/${imageName}:latest"
                            sh "docker push ${ECR_REGISTRY}/${imageName}:latest"
                        }
                    }
                }
            }
}
        
        stage('Deploy snappcoins services') {
            steps {
                
               
                dir('client'){
                     sh "export KUBECONFIG=/new/directory/path/config"
                         sh "aws eks update-kubeconfig --name snappcoins-cluster --region ap-south-1"
                           sh 'kubectl apply -f client-serviceaccount.yaml'
                        sh 'kubectl apply -f client-deployment.yaml'
                        sh ' kubectl apply -f client-service.yaml'
                        }
                dir('servers/gaming-vendor-module'){
                    sh "export KUBECONFIG=/new/directory/path/config"
                         sh "aws eks update-kubeconfig --name snappcoins-cluster --region ap-south-1"
                          sh 'kubectl apply -f gaming-vendor-module-serviceaccount.yaml'
                        sh 'kubectl apply -f gaming-vendor-module-deployment.yaml'
                        sh 'kubectl apply -f gaming-vendor-module-service.yaml'
                        }
                dir('servers/gamer-module'){
                    sh "export KUBECONFIG=/new/directory/path/config"
                         sh "aws eks update-kubeconfig --name snappcoins-cluster --region ap-south-1"
                          sh 'kubectl apply -f gamer-module-serviceaccount.yaml'
                       sh 'kubectl apply -f gamer-module-deployment.yaml'
                        sh 'kubectl apply -f gamer-module-service.yaml'
                        }
                dir('servers/general-module'){
                    sh "export KUBECONFIG=/new/directory/path/config"
                         sh "aws eks update-kubeconfig --name snappcoins-cluster --region ap-south-1"
                         sh 'kubectl apply -f general-module-serviceaccount.yaml'
                        sh 'kubectl apply -f general-module-deployment.yaml'
                        sh 'kubectl apply -f general-module-service.yaml'
                        }
                dir('servers/merchant-module'){
                    sh "export KUBECONFIG=/new/directory/path/config"
                         sh "aws eks update-kubeconfig --name snappcoins-cluster --region ap-south-1"
                         sh 'kubectl apply -f merchant-module-serviceaccount.yaml'
                        sh 'kubectl apply -f merchant-module-deployment.yaml'
                        sh 'kubectl apply -f merchant-module-service.yaml'
                        }
               
          
               
            }
        }
         
        
        }
      
    }
    

}

